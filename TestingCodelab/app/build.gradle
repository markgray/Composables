/*
 * Copyright 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.example.compose.rally"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true

        // Disable unused AGP features
        aidl false
        renderScript false
        resValues false
        shaders false
    }

    composeOptions {
        kotlinCompilerExtensionVersion "${composeCompilerVersion}"
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/licenses/**']
        }
        resources {
            excludes += ['META-INF/licenses/**', 'META-INF/AL2.0', 'META-INF/LGPL2.1']
        }
    }

    namespace 'com.example.compose.rally'
}

dependencies {
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "com.google.android.material:material:1.9.0"
    implementation "androidx.fragment:fragment-ktx:1.6.1"

    // Compose
    implementation "androidx.compose.runtime:runtime:1.5.0"
    implementation "androidx.compose.ui:ui:1.5.0"
    implementation "androidx.compose.foundation:foundation:1.5.0"
    implementation "androidx.compose.foundation:foundation-layout:1.5.0"
    implementation "androidx.compose.material:material:1.5.0"
    implementation "androidx.compose.runtime:runtime-livedata:1.5.0"
    implementation "androidx.compose.ui:ui-tooling-preview:1.5.0"
    implementation "androidx.compose.material:material-icons-extended:1.5.0"
    implementation "androidx.activity:activity-compose:1.7.2"
    debugImplementation "androidx.compose.ui:ui-tooling:1.5.0"

    // Testing dependencies
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.5.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"

    // Compose testing dependencies
    androidTestImplementation "androidx.compose.ui:ui-test:1.5.0"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.5.0"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.5.0"
}
